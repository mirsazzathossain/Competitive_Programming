#include<bits/stdc++.h>

using namespace std;

//Carmichael Numbers
/*
561, 
41041, 
825265, 
321197185, 
5394826801, 
232250619601, 
9746347772161, 
1436697831295441,
60977817398996785, 
7156857700403137441, 
1791562810662585767521, 
87674969936234821377601,
6553130926752006031481761, 
1590231231043178376951698401,
35237869211718889547310642241, 
32809426840359564991177172754241,
2810864562635368426005268142616001, 
349407515342287435050603204719587201,
125861887849639969847638681038680787361,
12758106140074522771498516740500829830401,
2333379336546216408131111533710540349903201,
294571791067375389885907239089503408618560001,
130912961974316767723865201454187955056178415601,
13513093081489380840188651246675032067011140079201,
7482895937713262392883306949172917048928068129206401,
1320340354477450170682291329830138947225695029536281601,
379382381447399527322618466130154668512652910714224209601,
70416887142533176417390411931483993124120785701395296424001,
2884167509593581480205474627684686008624483147814647841436801,
4754868377601046732119933839981363081972014948522510826417784001,
1334733877147062382486934807105197899496002201113849920496510541601,
260849323075371835669784094383812120359260783810157225730623388382401,
112505380450296606970338459629988782604252033209350010888227147338120001};
*/


long long arr[10] = {
                    561, 
                    41041, 
                    825265, 
                    321197185, 
                    5394826801, 
                    232250619601, 
                    9746347772161, 
                    1436697831295441,
                    60977817398996785, 
                    7156857700403137441};

int bigMod(int base, int power, int mod){

    if(power == 1) return base%mod;

    int x = bigMod(base, power/2, mod)%mod;

    x = (x*x) % mod;

    if(power & 1) x = ((x%mod)*(base%mod))%mod;

    return x;

}


bool isPrime(int number){

    if(number <= 1 || number == 4) return false;
    if(number <= 3) return true;

    int k=20;
    while(k--){
        int a = 2 + rand()%(number - 4);

        // Cheack if the number is co-prime with a
        if(__gcd(a, number) != 1) return false;

        // Fermat's Little Theorem a^(number - 1) = 1 (mod number) 
        if(bigMod(a, number-1, number) != 1) return false;
    }

    return true;
}

int main(){

    int n;
    cin>>n;

    bool flag = false;
    for(int i=0; i<10; i++){
        if(n == arr[i]) flag = true;
    }

    if(flag) cout<<"No"<<endl;
    else{
        if(isPrime(n)==1) cout<<"Yes"<<endl;
        else cout<<"No"<<endl;
    }

    return 0;
}